# Use postgres/example user/password credentials
volumes:
  chatterbox_data: {}
  redis_data: {}

services:
  db:
    image: pgvector/pgvector:pg17 # postgres with pgvector extension
    restart: always
    volumes:
      - chatterbox_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}

    ports:
      - 5432:5432

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
  #   api:
  #     build: .
  #     ports:
  #       - "8000:8000"
  #     volumes:
  #       - ./app:/app/app
  #     depends_on:
  #       - redis
  #     environment:
  #       - REDIS_URL=redis://redis:6379/0
  #       - DATABASE_URL=${DATABASE_URL}
  #       - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #       - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #       - AWS_REGION=${AWS_REGION}
  #       - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #       - ENVIRONMENT=DEV
  #     command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # celery_worker:
  #   build: .
  #   depends_on:
  #     - redis
  #     - db
  #   volumes:
  #     - ./app:/app/app
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #     - DATABASE_URL=${DATABASE_URL}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_REGION=${AWS_REGION}
  #     - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #     - ENVIRONMENT=DEV
  #   command: celery -A app.core.celery:celery_app worker --loglevel=info

  # celery_beat:
  #   build: .
  #   depends_on:
  #     - redis
  #     - db
  #     - celery_worker
  #   volumes:
  #     - ./app:/app/app
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #     - DATABASE_URL=${DATABASE_URL}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_REGION=${AWS_REGION}
  #     - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #     - ENVIRONMENT=DEV
  #   command: celery -A app.core.celery:celery_app beat --loglevel=info
